---
apiVersion: v1
kind: Service
metadata:
  name: watchman
  namespace: apps
spec:
  type: ClusterIP
  selector:
    app: watchman
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watchman
  namespace: apps
  labels:
    app: watchman
spec:
  replicas: 2
  selector:
    matchLabels:
      app: watchman
  template:
    metadata:
      labels:
        app: watchman
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
              weight: 1
      containers:
      - image: moov/watchman:v0.22.0
        imagePullPolicy: Always
        name: watchman
        args:
          - -workers=2048
          - -http.addr=:8080
          - -admin.addr=:9090
        env:
          - name: LOG_FORMAT
            value: plain
          - name: DATABASE_TYPE
            value: mysql
          - name: MYSQL_ADDRESS
            value: 'tcp(watchman-mysql.apps.svc.cluster.local:3306)'
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: watchman-mysql-secrets
                key: database
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: watchman-mysql-secrets
                key: username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: watchman-mysql-secrets
                key: password
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 5
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
---
